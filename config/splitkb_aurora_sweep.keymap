/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define WORKMAN      0
#define QWERTY       1
#define NAV          2
#define NUM          3
#define FUNC         4
#define DEV          5

#define COMBO_TIMEOUT 45

/ {
     behaviors {
         hrm: global-quick-tap {
             compatible = "zmk,behavior-hold-tap";
             label = "HOMEROW_MODS";
             #binding-cells = <2>;
             flavor = "tap-preferred";
             tapping-term-ms = <200>;
             quick-tap-ms = <0>;
             bindings = <&kp>, <&kp>;
         };

         vol_brt_down: volume_brightness_down {
            compatible = "zmk,behavior-mod-morph";
            label = "VOLUME_BRIGHTNESS_DOWN";
            #binding-cells = <0>;
            bindings = <&kp C_VOLUME_DOWN>, <&kp C_BRIGHTNESS_DEC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
         };
         
         vol_brt_up: volume_brightness_up {
            compatible = "zmk,behavior-mod-morph";
            label = "VOLUME_BRIGHTNESS_UP";
            #binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_BRIGHTNESS_INC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
         };
     };
};

/ {
     macros {
         fat_arrow: fat_arrow {
             label = "fat_arrow";
             compatible = "zmk,behavior-macro";
             #binding-cells = <0>;
             bindings
                 = <&macro_tap &kp EQUAL &kp GREATER_THAN>
                 ;
         };


         call: close_all {
             label = "elw_semi";
             compatible = "zmk,behavior-macro";
             #binding-cells = <0>;
             bindings
                 = <&macro_tap &kp LG(K) &kp LG(W)>
                 ;
         };

         esc_colon: esc_colon {
             label = "esc_colon";
             compatible = "zmk,behavior-macro";
             #binding-cells = <0>;
             bindings
                 = <&macro_tap &kp ESC &kp COLON>
                 ;
         };

         vim_search: combo_vim_search {
            label = "vim_search";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp SPACE &kp SPACE &kp S>;
         };
     };
};

/ { 

     combos {
         compatible = "zmk,combos";

         combo_refresh {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <1 2 3>;
             bindings = <&kp LG(R)>;
             layers = <0>;
         };

         combo_close {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <2 3 4>;
             bindings = <&kp LG(W)>;
             layers = <0>;
         };

         combo_close_all {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <1 2 3 4>;
             bindings = <&call>;
             layers = <0>;
         };

         combo_newtab {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <12 13 14>;
             bindings = <&kp LG(T)>;
             layers = <0>;
         };

         combo_cced {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <21 22 23>;
             bindings = <&kp LA(C)>;
             layers = <0>;
         };

         combo_acute {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <6 7 8>;
             bindings = <&kp RA(E)>;
             layers = <0>;
         };

         combo_grave {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <26 27 28>;
             bindings = <&kp RA(GRAVE)>;
             layers = <0>;
         };
         
         combo_hat {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <6 7 8 9>;
             bindings = <&kp RA(I)>;
             layers = <0>;
         };

         combo_trema {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <5 6 7 8>;
             bindings = <&kp RA(U)>;
             layers = <0>;
         };

         combo_esccolon {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <10 31>;
             bindings = <&esc_colon>;
             layers = <0>;
         };

         combo_tab {
             timeout-ms = <COMBO_TIMEOUT>;
             key-positions = <30 31>;
             bindings = <&kp TAB>;
             layers = <0>;
         };
     };

     keymap {
             compatible = "zmk,keymap";
             
         workman {
             bindings = <
// ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮ ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮
     &kp Q           &kp  D          &kp  R         &kp  W          &kp B             &kp J           &kp F           &kp U          &kp P           &kp SQT
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &hrm LSHIFT A   &hrm LALT S     &hrm LCTRL H   &hrm LGUI T     &hrm GLOBE G      &hrm GLOBE Y    &hrm RGUI N     &hrm RCTRL E   &hrm RALT O     &hrm RSHIFT I
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &kp Z           &kp X           &kp M          &kp C           &kp V             &kp K           &kp L           &kp COMMA      &kp DOT         &kp SLASH
// ╰───────────────┴───────────────┴──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┴──────────────┴───────────────┴───────────────╯
                                                    &lt DEV ESC     &lt NAV SPC       &lt NUM RET     &lt FUNC BSPC
//                                                ╰───────────────┴───────────────╯ ╰───────────────┴───────────────╯
             >;
         };

         qwerty {
             bindings = <
// ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮ ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮
     &kp Q           &kp  W          &kp  E         &kp  R          &kp T             &kp Y           &kp U           &kp I          &kp O           &kp P
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &hrm LSHIFT A   &hrm LALT S     &hrm LCTRL D   &hrm LGUI F     &hrm GLOBE G      &hrm GLOBE H    &hrm RGUI J     &hrm RCTRL K   &hrm RALT L     &hrm RSHFT SQT 
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &kp Z           &kp X           &kp C          &kp V           &kp B             &kp N           &kp M           &kp COMMA      &kp DOT         &kp SLASH
// ╰───────────────┴───────────────┴──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┴──────────────┴───────────────┴───────────────╯
                                                    &lt DEV ESC     &lt NAV SPC       &lt NUM RET     &lt FUNC BSPC
//                                                ╰───────────────┴───────────────╯ ╰───────────────┴───────────────╯
             >;
         };
         nav {
             bindings = <
// ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮ ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮
     &kp LG(Z)       &kp LG(X)       &kp LG(C)      &kp LG(V)       &kp LS(LG(Z))     &kp LBKT        &kp PLUS        &kp UP         &kp MINUS       &kp RBKT
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &kp LSHIFT      &kp LALT        &kp LCTRL      &kp LGUI        &kp TAB           &kp RS(LBKT)    &kp LEFT        &kp DOWN       &kp RIGHT       &kp RS(RBKT)
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &none           &none           &none          &none           &kp LG(GRAVE)     &kp LPAR        &trans          &kp DELETE     &kp V           &kp RPAR
// ╰───────────────┴───────────────┴──────────────┼ ──────────────┼───────────────┤ ├───────────────┼───────────────┴──────────────┴───────────────┴───────────────╯
                                                    &none           &to WORKMAN       &kp RETURN      &kp BSPC
//                                                ╰───────────────┴───────────────╯ ╰───────────────┴───────────────╯
             >;
         };

         num {
             bindings = <
// ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮ ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮
     &kp GRAVE       &kp N7          &kp N8         &kp N9          &kp MINUS         &kp LBKT        &kp PLUS        &none          &kp MINUS       &kp RBKT
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &kp SEMICOLON   &kp N4          &kp N5         &kp N6          &kp EQUAL         &kp GLOBE       &kp RGUI        &kp RCTRL      &kp RALT        &kp RSHIFT
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &kp BACKSLASH   &kp N1          &kp N2         &kp N3          &kp SLASH         &kp LPAR        &none           &kp DELETE     &none           &kp RPAR
// ╰───────────────┴───────────────┴──────────────┼ ──────────────┼───────────────┤ ├───────────────┼───────────────┴──────────────┴───────────────┴───────────────╯
                                                    &kp N0          &kp DOT           &none           &to NAV
//                                                ╰───────────────┴───────────────╯ ╰───────────────┴───────────────╯
 
             >;
         };

         func {
             bindings = <
// ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮ ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮
     &kp F12         &kp F7          &kp F8         &kp F9          &caps_word        &kp F14         &kp F15         &kp C_MUTE     &vol_brt_down   &vol_brt_up
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &kp F11         &kp F4          &kp F5         &kp F6          &kp CAPSLOCK      &kp GLOBE       &kp RGUI        &kp RCTRL      &kp RALT        &kp RSHIFT
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &kp F10         &kp F1          &kp F2         &kp F3          &none             &out OUT_USB    &out OUT_BLE    &bt BT_CLR     &bt BT_SEL 1    &bt BT_SEL 2
// ╰───────────────┴───────────────┴──────────────┼ ──────────────┼───────────────┤ ├───────────────┼───────────────┴──────────────┴───────────────┴───────────────╯
                                                    &none           &kp SPACE         &none           &none
//                                                ╰───────────────┴───────────────╯ ╰───────────────┴───────────────╯
             >;
         };

         dev {
             bindings = <
// ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮ ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮
     &none           &none           &none          &none           &none             &none           &none           &none          &none           &none
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &none           &vim_search     &none          &fat_arrow      &none             &none           &none           &none          &none           &none
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
     &none           &none           &none          &none           &none             &none           &none           &none          &none           &none
// ╰───────────────┴───────────────┴──────────────┼ ──────────────┼───────────────┤ ├───────────────┼───────────────┴──────────────┴───────────────┴───────────────╯
                                                    &none           &none             &to WORKMAN     &to QWERTY
//                                                ╰───────────────┴───────────────╯ ╰───────────────┴───────────────╯
             >;
         };
     };
};


// Default
// ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮ ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮
//   &kp Q           &kp  D          &kp  R         &kp  W          &kp B             &kp J           &kp F           &kp U          &kp P           &kp SQT
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
//   &hrm LSHIFT A   &hrm LALT S     &hrm LCTRL H   &hrm LGUI T     &kp G             &kp Y           &hrm RGUI N     &hrm RCTRL E   &hrm RALT O     &hrm RSHIFT I
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
//   &kp Z           &kp X           &kp M          &kp C           &kp V             &kp K           &kp L           &kp COMMA      &kp DOT         &kp SLASH
// ╰───────────────┴───────────────┴──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┴──────────────┴───────────────┴───────────────╯
//                                                  &lt DEV ESC     &lt NAV SPC       &lt NUM RET     &lt FUNC BSPC
//                                                ╰───────────────┴───────────────╯ ╰───────────────┴───────────────╯



// None
// ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮ ╭───────────────┬───────────────┬──────────────┬───────────────┬───────────────╮
//   &none           &none           &none          &none           &none             &none           &none           &none          &none           &none
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
//   &none           &none           &none          &none           &none             &none           &none           &none          &none           &none
// ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤ ├───────────────┼───────────────┼──────────────┼───────────────┼───────────────┤
//   &none           &none           &none          &none           &none             &none           &none           &none          &none           &none
// ╰───────────────┴───────────────┴──────────────┼ ──────────────┼───────────────┤ ├───────────────┼───────────────┴──────────────┴───────────────┴───────────────╯
//                                                  &none           &none             &none           &none
//                                                ╰───────────────┴───────────────╯ ╰───────────────┴───────────────╯
